{"version":3,"sources":["features/Food/reducer.ts","components/SearchInput.tsx","features/Survey/selectors.ts","components/Header.tsx","features/Simulator/selectors.ts","features/Simulator/Simulator.tsx","features/Food/selectors.ts","components/FoodList.tsx","features/Intake/reducer.ts","components/InfoTable.tsx","features/Survey/reducer.ts","features/Survey/survey.tsx","components/Card.tsx","features/Intake/selectors.ts","features/Simulator/reducer.ts","features/Intake/Intake.tsx","features/Food/Food.tsx","features/Food/api.ts","features/Simulator/saga.ts","features/Food/saga.ts","features/Intake/saga.ts","store/sagas.js","store/reducer.ts","store/index.ts","App.js","index.js"],"names":["slice","createSlice","name","initialState","foodInfo","input","options","foodItem","currentWeight","targetWeight","calorie","reducers","foodAutoCompleteRequest","state","action","payload","foodOptionsReceived","fooditemsRequest","foodItemsReceived","map","Map","hints","filter","item","has","food","label","set","image","nutrients","foodId","foodApiErrorReceived","reducer","actions","useStyles","makeStyles","theme","createStyles","root","padding","display","alignItems","width","marginLeft","spacing","flex","iconButton","divider","height","margin","SearchInput","classes","dispatch","useDispatch","useState","inputValue","setInputValue","Paper","component","className","onSubmit","e","preventDefault","InputBase","placeholder","inputProps","onChange","event","target","value","IconButton","type","aria-label","onClick","getSurveyStatus","survey","complete","background","grow","flexGrow","color","Header","status","useSelector","AppBar","position","Toolbar","Typography","variant","getTargetWeight","simulator","getBeforeImg","beforeImage","getAfterImg","afterImage","Simulator","beforeImg","afterImg","showCurrentImg","setCurrentImg","showTargetImg","setTargetImg","style","justifyContent","Tooltip","title","src","alt","CSSTransition","in","timeout","classNames","unmountOnExit","onEnter","onExited","getOptionInput","getOptions","getFoodItem","getFoodInfo","maxWidth","backgroundColor","palette","paper","FoodList","selectors","listItems","index","ListItem","button","ListItemText","primary","length","List","aria-labelledby","subheader","ListSubheader","id","data","addItem","concat","reduce","a","b","ENERC_KCAL","reduceItem","splice","intakeApiErrorReceived","descendingComparator","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","numeric","disablePadding","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","secondary","main","lighten","light","text","dark","EnhancedTableToolbar","selected","clsx","marginBottom","table","minWidth","border","clip","overflow","top","card","EnhancedTable","foodData","React","setOrder","setOrderBy","setSelected","page","setPage","dense","setDense","showCard","setShowCard","rowsPerPage","setRowsPerPage","useEffect","emptyRows","Math","min","TableContainer","Table","size","newSelecteds","n","TableBody","row","isItemSelected","info","selectedIndex","forEach","isSelected","labelId","hover","newSelected","handleClick","role","aria-checked","tabIndex","scope","PROCNT","FIBTG","FAT","CHOCDF","Card","CardActionArea","CardMedia","onMouseLeave","onMouseEnter","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","age","weight","surveyCompleted","surveyApiErrorReceived","StartSurvey","model","Survey","elements","isRequired","validators","minValue","maxValue","onComplete","zIndex","ImgCard","CardContent","gutterBottom","CardActions","Button","console","log","getSelectedItems","intake","getTotalCalories","simulatorDataRecevied","imageDataReceived","current","goal","simulatorApiErrorReceived","Intake","cards","flexWrap","Link","to","errorMessage","error","dispatchSimulationError","sqrt","simulatorActions","Food","surveyStatus","getFoodOptions","inputIngr","axios","get","params","q","limit","app_id","process","REACT_APP_FOOD_APP_ID","app_key","REACT_APP_FOOD_APP_KEY","getFooditems","ingr","postImages","post","REACT_APP_SIMULATOR_APP_KEY","simulatorDataRecieved","apiErrorReceived","watchSimulator","select","call","imageData","put","SimulatorActions","toast","takeEvery","foodOptionsRecieved","foodItemRecieved","watchFood","optionInput","optionsData","FoodActions","foodItemData","watchIntake","IntakeActions","spawn","simulatorSaga","foodSaga","intakeSaga","simulatorReducer","foodReducer","intakeReducer","surveyReducer","combineReducers","store","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","createStore","run","sagas","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1697eecd.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from 'redux-starter-kit';\n\nexport interface foodState {\n  foodInfo: any;\n  input: string;\n  options: string[];\n  foodItem: string;\n  currentWeight: number;\n  targetWeight: number;\n  calorie: number;\n}\n\nconst initialState:foodState = {\n  foodInfo: [],\n  input: '',\n  options:[],\n  foodItem: '',\n  currentWeight: 0,\n  targetWeight: 0,\n  calorie: 0\n};\n\n\nconst slice = createSlice({\n  name: 'food',\n  initialState,\n  reducers: {\n    foodAutoCompleteRequest: (state, action: PayloadAction<string>) => {\n      state.input = action.payload\n    },\n    foodOptionsReceived: (state, action: PayloadAction<string[]>) => {\n      state.options = action.payload\n    },\n    fooditemsRequest: (state, action: PayloadAction<string>) => {\n      state.foodItem = action.payload\n    },\n    foodItemsReceived: (state, action: PayloadAction<any>) => {\n      const map = new Map()\n      state.foodInfo = action.payload.hints.filter((item: any) => {\n        if(!map.has(item.food.label)){\n          map.set(item.food.label, 1)\n        }\n        else if(map.has(item.food.label)){\n          return false\n        }\n        return item.food.image\n      }).map((item:any) => {\n        item.food.nutrients = {image: item.food.image, label: item.food.label, foodId: item.food.foodId, ...item.food.nutrients}\n        return item\n      })\n    },\n    foodApiErrorReceived: (state, action: PayloadAction<any>) => state,\n  },\n});\n\nexport const reducer = slice.reducer;\nexport const actions = slice.actions;","import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useDispatch } from 'react-redux';\nimport { actions } from '../features/Food/reducer';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  }),\n);\n\nexport default function SearchInput() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState('')\n  const searchOptions = (value: string) => {\n    dispatch(actions.foodAutoCompleteRequest(value))\n  }\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n  }\n  \n\n  return (\n    <Paper component=\"form\" className={classes.root} onSubmit={submitHandler}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search Your Meal\"\n        inputProps={{ 'aria-label': 'search meal ingr' }}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => setInputValue(event.target.value)}\n      />\n      <IconButton type=\"button\" className={classes.iconButton} aria-label=\"search\" onClick={() => searchOptions(inputValue)}>\n        <SearchIcon/>\n      </IconButton>\n    </Paper>\n  );\n}\n\n\n","import { IState } from '../../store';\n\nexport const getSurveyStatus = (state: IState) => state.survey.complete;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchInput from '../components/SearchInput';\nimport { useSelector } from 'react-redux';\nimport { getSurveyStatus } from '../features/Survey/selectors';\n\nconst useStyles = makeStyles({\n  root: {\n    background: '#FFE2EC',\n    width: \"100%\"\n  },\n  grow: {\n    flexGrow: 1,\n    color: '#F60057'\n  },\n});\n\nexport default function Header() {\n  const classes = useStyles();\n  const status = useSelector(getSurveyStatus)\n\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          Calorie Simulator\n        </Typography>\n        {status ? <SearchInput/> : null}\n      </Toolbar>\n    </AppBar>\n  );\n};","import { IState } from '../../store';\n\nexport const getTargetWeight = (state: IState) => state.simulator.targetWeight;\nexport const getBeforeImg = (state: IState) => state.simulator.beforeImage;\nexport const getAfterImg = (state: IState) => state.simulator.afterImage;","import React, {useState} from 'react';\nimport { useSelector } from 'react-redux';\nimport { getBeforeImg, getAfterImg} from './selectors';\nimport { CSSTransition } from 'react-transition-group';\nimport './simulator.css';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function Simulator() {\n  const beforeImg = useSelector(getBeforeImg)\n  const afterImg = useSelector(getAfterImg)\n  const [showCurrentImg, setCurrentImg] = useState(true)\n  const [showTargetImg, setTargetImg] = useState(false)\n \n  return (\n  <div style={{padding: \"2%\", display: 'flex', justifyContent: 'center'}}>\n    {showCurrentImg && (\n      <Tooltip title=\"Current Body Shape\">\n        <img \n          src={ beforeImg } \n          alt=\"current\" \n          aria-label=\"current\"\n          onClick={() => setTargetImg(true)}\n        />\n      </Tooltip>\n      \n    ) }\n    <CSSTransition\n        in={showTargetImg}\n        timeout={300}\n        classNames=\"alert\"\n        unmountOnExit\n        onEnter={() => setCurrentImg(false)}\n        onExited={() => setCurrentImg(true)}\n      >\n      <Tooltip title=\"Target Body Shape\">\n        <img \n          src={ afterImg } \n          alt=\"goal\" \n          aria-label=\"current\"\n          onClick={() => setTargetImg(false)}\n        />\n      </Tooltip>\n      </CSSTransition>\n   \n  </div>)\n};\n","import { IState } from '../../store';\n\nexport const getOptionInput = (state: IState) => state.food.input;\nexport const getOptions = (state: IState) => state.food.options;\nexport const getFoodItem = (state: IState) => state.food.foodItem;\nexport const getFoodInfo = (state: IState) => state.food.foodInfo;\n\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport * as selectors from '../features/Food/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actions } from '../features/Food/reducer';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    paper: {\n        width: '300px'\n    }\n  }),\n);\n\nexport default function FoodList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const options = useSelector(selectors.getOptions);\n  const getFooditems = (foodItem: string) => {\n    dispatch(actions.fooditemsRequest(foodItem))\n  }\n\n\n  const listItems = options.map((item, index) => {\n    return  (\n        <ListItem key={index} button>\n            <ListItemText primary={item} onClick={() => getFooditems(item) }/>\n        </ListItem>)\n  })\n  \n  \n          \n  if(options.length === 0){\n      return null\n  }\n  else{\n    return (\n        <Paper className={classes.paper}>\n            <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n                subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\" style={{background: '#FFE2EC', color: '#F60057'}}>\n                    Do you mean one of following ingredients ?\n                    </ListSubheader>\n                }\n                className={classes.root}\n            >\n            {listItems}\n            </List>\n        </Paper>\n        \n      );\n  }\n}","import { createSlice, PayloadAction } from 'redux-starter-kit';\n\nexport interface intakeState {\n  data:any,\n  calorie: number\n}\n\nconst initialState:intakeState = {\n  data:[],\n  calorie: 0\n};\n\nconst slice = createSlice({\n  name: 'intake',\n  initialState,\n  reducers: {\n    addItem: (state, action: PayloadAction<any>) => {\n      state.data = state.data.concat(action.payload)\n      state.calorie = state.data.reduce((a: number, b: any) => {\n        return a + b.ENERC_KCAL\n      }, 0)\n    },\n    reduceItem: (state, action: PayloadAction<string>) => {\n      state.data.splice(action.payload, 1)\n      state.calorie = state.data.reduce((a: number, b: any) => {\n        return a + b.ENERC_KCAL\n      }, 0)\n    },\n    intakeApiErrorReceived: (state, action: PayloadAction<any>) => state,\n  },\n});\n\nexport const reducer = slice.reducer;\nexport const actions = slice.actions;","import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFoodInfo } from '../features/Food/selectors';\nimport { actions } from '../features/Intake/reducer';\n\ninterface Data {\n    Name: string\n    ENERC_KCAL:number\n    PROCNT:number\n    FIBTG:number\n    FAT:number\n    CHOCDF:number\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el: any, index) => [el.food.nutrients, index] as [T, number]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n  disablePadding: boolean;\n  id: keyof Data;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n  { id: 'Name', numeric: false, disablePadding: true, label: 'Food (per serve)' },\n  { id: 'ENERC_KCAL', numeric: true, disablePadding: false, label: 'ENERC (kcal)' },\n  { id: 'PROCNT', numeric: true, disablePadding: false, label: 'PROCNT (g)' },\n  { id: 'FIBTG', numeric: true, disablePadding: false, label: 'FIBTG (g)' },\n  { id: 'FAT', numeric: true, disablePadding: false, label: 'FAT (g)' },\n  { id: 'CHOCDF', numeric: true, disablePadding: false, label: 'CHOCDF (g)' }\n];\n\ninterface EnhancedTableProps {\n  classes: ReturnType<typeof useStyles>;\n  numSelected: number;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n        <TableCell></TableCell>\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1),\n    },\n    highlight:\n      theme.palette.type === 'light'\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n          }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n          },\n    title: {\n      flex: '1 1 100%',\n    },\n  }),\n);\n\nconst EnhancedTableToolbar = (props: any) => {\n  const classes = useToolbarStyles();\n  const { numSelected, selected } = props;\n  const dispatch = useDispatch();\n\n  const handleAddItem = () => {\n    dispatch(actions.addItem(selected))\n  };\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Nutrition\n        </Typography>\n      )}\n      {numSelected > 0 ?\n        <Tooltip title=\"Add to diet plan\">\n          <IconButton aria-label=\"diet plan\" onClick={ () => handleAddItem() }>\n            <AddCircleIcon />\n          </IconButton>\n        </Tooltip> : null }\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n    card: {\n      maxWidth: 125,\n    },\n  }),\n);\n\nexport default function EnhancedTable() {\n  const foodData = useSelector(getFoodInfo)\n  const classes = useStyles();\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('ENERC_KCAL');\n  const [selected, setSelected] = React.useState<any[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [showCard, setShowCard] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  useEffect(() => {\n    setSelected([])\n  }, [foodData])\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = foodData.map((n: any) => n.food.nutrients);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, info: any) => {\n    let selectedIndex = -1 \n    selected.forEach((item, index) => {\n      if(item.label === info.label){\n        selectedIndex = index\n        return \n      }\n    });\n    let newSelected: any[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, info);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (info: any) => {\n    let selectedIndex = -1 \n    selected.forEach((item, index) => {\n      if(item.label === info.label){\n        selectedIndex = index\n        return\n      }\n    });\n    return selectedIndex !== -1\n  }\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, foodData.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected}/>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={foodData.length}\n            />\n            <TableBody>\n              {stableSort(foodData, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row: any, index) => {\n                  const isItemSelected = isSelected(row);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event: any) => handleClick(event, row)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.label}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.label}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.ENERC_KCAL}</TableCell>\n                      <TableCell align=\"right\">{row.PROCNT}</TableCell>\n                      <TableCell align=\"right\">{row.FIBTG}</TableCell>\n                      <TableCell align=\"right\">{row.FAT}</TableCell>\n                      <TableCell align=\"right\">{row.CHOCDF}</TableCell>\n                      <TableCell align=\"right\">\n                        {showCard ? <Card className={classes.card}>\n                          <CardActionArea>\n                            <CardMedia\n                              component=\"img\"\n                              alt={row.label}\n                              height=\"140\"\n                              image={row.image}\n                              title={row.label}\n                              onMouseLeave={() => setShowCard(!showCard)}\n                            />\n                          </CardActionArea>\n                        </Card> :  \n                        <Tooltip \n                          title='preview' \n                          onMouseEnter={() => setShowCard(!showCard)} >\n                          <IconButton \n                            aria-label=\"Image\">\n                            <InfoIcon />\n                          </IconButton>\n                        </Tooltip>}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={foodData.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}","import { createSlice, PayloadAction } from 'redux-starter-kit';\n\nexport interface surveyState {\n    complete: boolean,\n    age: string,\n    weight: number\n}\n\nconst initialState:surveyState = {\n complete: false,\n age: '',\n weight: 0\n};\n\n\nconst slice = createSlice({\n  name: 'survey',\n  initialState,\n  reducers: {\n    surveyCompleted: (state, action: PayloadAction<any>) => {\n      state.complete = true\n      state.age = 'AG' + action.payload.age\n      state.weight = action.payload.weight\n    },\n    surveyApiErrorReceived: (state, action: PayloadAction<any>) => state,\n  },\n});\n\nexport const reducer = slice.reducer;\nexport const actions = slice.actions;","//In your react App.js or yourComponent.js file add these lines to import\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\nimport { useDispatch } from 'react-redux';\nimport { actions } from './reducer';\n// import { Link } from 'react-router-dom';\n\n \nexport default function StartSurvey() {\n //Define Survey JSON\n //Here is the simplest Survey with one text question\n const dispatch = useDispatch()\n const json = {\n  elements: [\n   { \n     type: \"text\", \n     name: \"age\", \n     title: \"How old are you?\", \n     isRequired: true,\n     validators: [\n      {\n          type: \"numeric\",\n          minValue: 10,\n          maxValue: 90\n      }\n  ]\n    },\n   { \n     type: \"text\", \n     name: \"weight\", \n     title: \"What is your current weight (lb)?\", \n     isRequired: true,\n     validators: [\n      {\n          type: \"numeric\",\n          minValue: 60,\n          maxValue: 300\n      }\n  ]\n    },\n  ]\n };\n\n //Define a callback methods on survey complete\n const onComplete = (survey: any, options: any) => {\n  //Write survey results into database\n  dispatch(actions.surveyCompleted(survey.data))\n }\n\n var model = new Survey.Model(json);\n\n  return (<Survey.Survey model={model} onComplete={onComplete}/>);\n \n} ","\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { useDispatch } from 'react-redux';\nimport { actions } from '../features/Intake/reducer';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 245,\n    minWidth: 150,\n    zIndex:10,\n    margin: \"10px\"\n  },\n});\n\nexport default function ImgCard(props: any) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const removeItem = () => {\n    console.log(props)\n    dispatch(actions.reduceItem(props.foodId))\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt={props.food.label}\n          height=\"140\"\n          image={props.food.image}\n          title={props.food.label}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.food.label}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Calorie per serve: {props.food.ENERC_KCAL} KCAl\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => removeItem()}>\n          Remove\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import { IState } from '../../store';\n\nexport const getSelectedItems = (state: IState) => state.intake.data;\nexport const getTotalCalories = (state: IState) => state.intake.calorie;\n\n\n","import { createSlice, PayloadAction } from 'redux-starter-kit';\nexport interface simulatorState {\n  currentWeight: number;\n  targetWeight: number;\n  beforeImage: string;\n  afterImage: string;\n}\n\nconst initialState:simulatorState = {\n  currentWeight: 0,\n  targetWeight: 0,\n  beforeImage: '',\n  afterImage: ''\n};\n\n\n\nconst slice = createSlice({\n  name: 'simulator',\n  initialState,\n  reducers: {\n    simulatorDataRecevied: (state, action: PayloadAction<any>) => {\n      state.targetWeight = action.payload\n    },\n    imageDataReceived:  (state, action: PayloadAction<any>) => {\n      console.log(action.payload)\n      state.beforeImage = action.payload.current\n      state.afterImage = action.payload.goal\n    },\n    simulatorApiErrorReceived: (state, action: PayloadAction<any>) => state,\n  },\n});\n\nexport const reducer = slice.reducer;\nexport const actions = slice.actions;","\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport ImgCard from '../../components/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { getSelectedItems, getTotalCalories } from './selectors';\nimport { actions } from  './reducer';\nimport { actions as simulatorActions } from '../Simulator/reducer';\nimport { Link } from 'react-router-dom';\n\nexport default function Intake() {\n  const dispatch = useDispatch()\n  const intake = useSelector(getSelectedItems)\n  const calorie = useSelector(getTotalCalories)\n\n  const dispatchSimulationError = () => {\n    let errorMessage = ''\n    if(calorie > 3000){\n      errorMessage = 'It is too much for an adult daily intake, please remove some food'\n    }\n    else if(calorie < 1900){\n      errorMessage = 'It is too less for an adult daily intake, please add more food'\n    }\n    dispatch(actions.intakeApiErrorReceived({error: errorMessage}))\n  }\n\n  const startSimulation = () => {\n    if (calorie > 4000 || calorie < 1500){\n      dispatchSimulationError()\n    }\n    else {\n      const weight = Math.sqrt((calorie - 752.901)/0.028) - 167.074\n      dispatch(simulatorActions.simulatorDataRecevied(weight))\n    }\n  }\n  \n  const cards = intake.length > 0 ? (intake.map((item: any, index: number) => {\n      return <ImgCard food={item} key={index} foodId={index} style={{minWidth: \"100px\"}}/>\n    })):null\n  \n  return (\n    <Card>\n      <CardActionArea>\n        <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          Total Calories: {calorie} KCAL\n        </Typography>\n          <div style={{display: 'flex', justifyContent:'space-around', flexWrap: \"wrap\"}}>\n            {cards}\n          </div>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button component={Link} to={'/simulator'} size=\"large\" variant=\"contained\" color=\"secondary\" onClick={startSimulation}>\n          Run Simulation\n        </Button>\n      </CardActions>\n    </Card>\n )\n};","import FoodList from '../../components/FoodList';\nimport InforTable from '../../components/InfoTable';\nimport { getFoodInfo } from './selectors';\nimport { useSelector } from 'react-redux';\nimport StartSurvey from '../Survey/survey';\nimport Intake from '../Intake/Intake';\nimport { getSurveyStatus } from '../Survey/selectors';\n\nexport default function Food() {\n  const foodData = useSelector(getFoodInfo)\n  const surveyStatus = useSelector(getSurveyStatus)\n  \n  return (\n    <div>\n      <div style={{display: 'flex', justifyContent:'center', margin: '50px'}}>\n      <FoodList/>\n      </div>\n      {foodData.length > 0 ? <InforTable /> : null}\n      {surveyStatus ? <Intake /> : <StartSurvey /> }\n    </div>\n )\n};","import axios from 'axios'\n\nexport const getFoodOptions = (inputIngr: string) => {\n    return axios.get(`https://api.edamam.com/auto-complete`,{\n        params: {\n            q:inputIngr,\n            limit: 10,\n            app_id: process.env.REACT_APP_FOOD_APP_ID,\n            app_key: process.env.REACT_APP_FOOD_APP_KEY,\n          \n        }\n    })\n}\n\nexport const getFooditems = (ingr: string) => {\n    return axios.get(`/api/food-database/v2/parser`,{\n        params: {\n            ingr: ingr,\n            app_id: process.env.REACT_APP_FOOD_APP_ID,\n            app_key: process.env.REACT_APP_FOOD_APP_KEY,\n        }\n    })\n}\n\nexport const postImages = (targetWeight: number) => {\n    return axios.post(`http://sandbox.modelmydiet.com/women`,{\n        \"api_key\": process.env.REACT_APP_SIMULATOR_APP_KEY,\n        \"units\":\"imperial\",\n        \"height\":\"65\",\n        \"shape\":\"hourglass\",\n        \"bust\":\"small\",\n        \"ethnicity\":\"CA01\",\n        \"age\":\"AG20\",\n        \"eyes\":\"EYR\",\n        \"nose\":\"NOS\",\n        \"lips\":\"LPT\",\n        \"beard_style\": \"BS01\",\n        \"beard_color\": \"BC01\",\n        \"hair_color\":\"HC01\",\n        \"hair_style\":\"HS21\",\n        \"outfit\":\"undergarment\",\n        \"background\":\"blank\",\n        \"view\":\"front\",\n        \"delta\": {\n            \"current\":{\n                \"weight\":\"190\"\n            },\n            \"goal\" : {\n                \"weight\": targetWeight\n            }\n        }\n    })\n}","import { postImages } from '../Food/api';\nimport { takeEvery, put, call, select } from 'redux-saga/effects';\nimport { actions as SimulatorActions } from './reducer';\nimport { PayloadAction } from 'redux-starter-kit';\nimport { toast } from 'react-toastify';\nimport * as selectors from './selectors';\n\nfunction* simulatorDataRecieved(action: PayloadAction<any>): any {\n    const targetWeight = yield select(selectors.getTargetWeight);\n    try {\n        const imageData = yield call(postImages, targetWeight)\n        yield put(SimulatorActions.imageDataReceived(imageData.data))\n    }\n    catch(error) {\n        yield put(SimulatorActions.simulatorApiErrorReceived(error))\n    }\n  }\n  \nfunction* apiErrorReceived(action: PayloadAction<any>) {\n    yield call(toast.error, `Error Received: ${action.payload.error}`);\n  }\n\nexport default function* watchSimulator() {\n    yield takeEvery(SimulatorActions.simulatorDataRecevied.type, simulatorDataRecieved);\n    yield takeEvery(SimulatorActions.simulatorApiErrorReceived.type, apiErrorReceived);\n  }","import { takeEvery, put, call, select } from 'redux-saga/effects';\nimport { getFoodOptions, getFooditems } from './api'\nimport { toast } from 'react-toastify';\nimport * as selectors from './selectors';\nimport { PayloadAction } from 'redux-starter-kit';\nimport { actions as FoodActions } from './reducer';\n\n\n\nfunction* foodOptionsRecieved(action: PayloadAction<any>): any {\n  const optionInput = yield select(selectors.getOptionInput);\n  try {\n    const optionsData = yield call(getFoodOptions, optionInput);\n    if(optionsData.data.length === 0){\n      const errorMessage = 'Your input is not valid, please try another food'\n      yield put(FoodActions.foodApiErrorReceived({error: errorMessage}));\n    }\n    yield put(FoodActions.foodOptionsReceived(optionsData.data));\n  }\n  catch(error) {\n    yield put(FoodActions.foodApiErrorReceived(error));\n  }\n  \n}\n\nfunction* foodItemRecieved(action: PayloadAction<any>): any {\n  const foodItem = yield select(selectors.getFoodItem);\n  try {\n    const foodItemData = yield call(getFooditems, foodItem);\n    yield put(FoodActions.foodItemsReceived(foodItemData.data));\n  }\n  catch(error) {\n    yield put(FoodActions.foodApiErrorReceived(error));\n  }\n}\n\nfunction* apiErrorReceived(action: PayloadAction<any>) {\n  yield call(toast.error, `Error Received: ${action.payload.error}`);\n}\n\nexport default function* watchFood() {\n  yield takeEvery(FoodActions.foodAutoCompleteRequest.type, foodOptionsRecieved);\n  yield takeEvery(FoodActions.fooditemsRequest.type, foodItemRecieved);\n  yield takeEvery(FoodActions.foodApiErrorReceived.type, apiErrorReceived);\n}","import { takeEvery, call } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { PayloadAction } from 'redux-starter-kit';\nimport { actions as IntakeActions } from './reducer';\n\nfunction* apiErrorReceived(action: PayloadAction<any>) {\n    yield call(toast.error, `Error Received: ${action.payload.error}`);\n  }\n  \n  export default function* watchIntake() {\n    yield takeEvery(IntakeActions.intakeApiErrorReceived.type, apiErrorReceived);\n  }","import { spawn } from 'redux-saga/effects';\nimport simulatorSaga from '../features/Simulator/saga';\nimport foodSaga from '../features/Food/saga';\nimport intakeSaga from '../features/Intake/saga';\n\nexport default function* root() {\n  yield spawn(simulatorSaga);\n  yield spawn(foodSaga);\n  yield spawn(intakeSaga);\n}\n","import { reducer as simulatorReducer } from '../features/Simulator/reducer';\nimport { reducer as foodReducer } from '../features/Food/reducer';\nimport { reducer as intakeReducer } from '../features/Intake/reducer';\nimport { reducer as surveyReducer } from '../features/Survey/reducer';\n\nconst reducer = {\n  simulator: simulatorReducer,\n  food: foodReducer,\n  intake: intakeReducer,\n  survey: surveyReducer\n};\n\nexport default reducer\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { combineReducers } from 'redux-starter-kit';\nimport sagas from './sagas';\nimport reducers from './reducer';\n\nconst reducer = combineReducers(reducers);\nexport type IState = ReturnType<typeof reducer>;\n\nexport default function mainStore(){\n  const composeEnhancers = composeWithDevTools({});\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = applyMiddleware(sagaMiddleware);\n  const store = createStore(reducer, composeEnhancers(middlewares));\n\n  sagaMiddleware.run(sagas);\n\n  return store;\n};\n","import './App.css';\nimport Header from './components/Header';\nimport Simulator from './features/Simulator/Simulator';\nimport Food from './features/Food/Food';\nimport createStore from './store';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst store = createStore();\n\nfunction App() {\n  return (\n    <Provider store={store}> \n      <Router>\n        <ToastContainer />\n        <Switch>\n          <Route exact path=\"/\">\n            <Header />\n            <Food />\n          </Route>\n          <Route exact path=\"/simulator\">\n            <Simulator />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}